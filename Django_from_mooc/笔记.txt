1 通过 Tools -- Run manage.py Task 可以直接打开 manage.py 环境，进行命令输入，比如：statrapp mm，就可以创建 mm 这个app。
    有一个与项目同名的文件夹，这个文件夹存放的是项目的主要配置文件，如 setting，urls，wsgi等。
2 创建包：apps--把各个app放入这个包中，方便管理，log--记录日志，media--管理用户上传的文件，static--静态文件，如CSS，JS，静态文件等。
3 在 manage.py 环境下，通过 makemigrations 命令创建数据库表，再通过 migrate 命令迁移到数据库中。

   笔记写在项目中

4 APP message 只是用于简单功能的介绍和测试，其他APP才是真正的实战。

5 python3安装xadmin。
    （1）pip install xadmin。
    （2）pip uninstall xadmin。这两步的目的是获取xadmin的依赖包。
    （3）使用源码安装xadmin，下载地址：https://github.com/sshwsfc/xadmin.git
        下载完成后，把压缩包内的xadmin文件夹复制到项目的extra_apps目录（存放第三方包的目录）中。
    （4）在setting的APP中注册，把它当作一个APP使用。名称为：xadmin。（顺便说一下，还需要加入注册一个包：crispy_forms）
    （4）除此之外，还需要安装其他的包：
        pip install future
        pip install six
    （5）最后，可能需要在 manage.py 环境下执行 makemigrations 和 migrate，迁移 xadmin 的数据表。

6 小技巧：我们可以为新建文件添加初始化内容。点击PyCharm--Preferences--Editor--File and code Templates。
         选择想要更改的文件，在上面输入自己想要添加当内容，则以后每次生成该类文件时，会自动添加相应当内容。

7 session 与 cookie：
    cookies实际上就是浏览器支持的一种本地存储方式，它储存的结构是键值对。
    session是基于cookies的，因为cookies把信息储存在本地，并不安全，于是产生了一种新的机制。
    客户端发请求给服务器，服务器生成了一个session，它包括：
        一个sessionkey（放在cookies中返回给客户端）
        一个sessiondata（把用户的用户名密码等信息加密后储存在服务器上）
        一个时间（session的过期时间）
    于是，客户端与服务器之间，只需要传输sessionkey即可，服务器会进行判断，然后取出用户的用户名密码等信息，保证了安全。

8 图片验证码功能：
    （1）先安装第三方包：pip install  django-simple-captcha。
    （2）在setting的APP中注册，把它当作一个APP使用。名称为：captcha。
    （3）在 manage.py 环境下执行 migrate 进行数据库迁移。
    （3）加入url：url(r'^captcha/', include('captcha.urls')),

9 Django的extend机制：
    在HTML中，有一种include机制，但是被include的HTML必须是一个静态网页，这样做有两个缺点：
        （1）不仅不方便数据传输，因为被include的HTML是静态加载的，无法实现动态的数据处理。
        （2）限制太多，比较繁琐。比如一个页面要引入head和foot，必须分别创建两个HTML，且放在固定的位置上。
    为了解决这些问题，Django开发了extend机制。
    使用方法：
        （1）先创建一个base页面，作为HTML的框架基础。在这个页面中，先考虑其他所有页面公共用到的部分，写上去就行。
                再把某些其他页面需要修改的部分用 {% block '关键字' %} {% endblock %} 包含起来。
        （2）子页面先 {% extends 'base.html' %}，需要修改的部分用 {% block '关键字' %} XXX {% endblock %}重写。
                需要被重写的部分，是按照'关键字'查找并替换的，因此不需要按照base页面的{% block %}顺序进行重写。
                注意：即使base页面写了{% load staticfiles %}，子页面还是需要写上{% load staticfiles %}。
        （3）假如服务器向子页面传输了数据，base也能够使用。

10 在网页上显示图片时，不能用src，而是用 data-url，同时，如果配置了 MEDIA_URL ，则需要在 data-url 的值的最前面加上它。

11 分页功能：pip install django-pure-pagination。并在APP下注册：'pure_pagination',

12 int型数据从后台传到页面时，不能直接与str类型的数据比较，需要格式化，方法是：city.id|stringformat:'i'。
    当然，应该时时刻刻注意格式的问题。

13 从7.7开始不做笔记。
